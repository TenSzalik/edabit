//Create a function that takes an array of hurdle heights and a jumper's jump height, and determine whether or not the hurdler can clear all the hurdles.
//A hurdler can clear a hurdle if their jump height is greater than or equal to the hurdle height.
using NUnit.Framework;

[TestFixture]
public class Tests
{
	[Test]
	[TestCase(new int[]{1, 2, 3, 4, 5}, 5, Result=true)]
	[TestCase(new int[]{5, 5, 3, 4, 5}, 3, Result=false)]
	[TestCase(new int[]{5, 4, 5, 6}, 10, Result=true)]
	[TestCase(new int[]{1,2,1}, 1, Result=false)]
	[TestCase(new int[]{3,3,3}, 4, Result=true)]
	[TestCase(new int[]{4,4}, 3, Result=false)]
	[TestCase(new int[]{}, 4, Result=true)] 
	public static bool hurdleJump(int[] x, int y)
	{
		 return Program.hurdleJump(x, y);
	}
}
public class Program 
{
    public static bool LessThanOrEqualToZero(double a) 
    {
    	
    }
}
